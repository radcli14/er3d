#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Z"
)

reorder rootPrims = ["Root", "GlobalX", "GlobalY", "GlobalZ"]

def Xform "Root"
{
    reorder nameChildren = ["Globe", "Long", "Sphere", "Materials"]
    def Sphere "Globe" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (1.570796, 0, 3.1415927)
        }
    )
    {
        reorder nameChildren = ["GlobeMaterial", "GlobalZ", "GlobalX", "GlobalY"]
        rel material:binding = </Root/Materials/GlobeMaterial>
        double radius = 0.3141
        quatf xformOp:orient = (-3.0908623e-8, -3.0908613e-8, 0.70710665, 0.7071069)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Scope "Materials" (
        active = true
    )
    {
        reorder nameChildren = ["Red", "Green", "Blue", "Gray", "Shiny", "GlobeMaterial"]
        def Material "Red"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Materials/Red/UsdPreviewSurface.outputs:surface>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 0.14913142, 0) (
                    colorSpace = "srgb_texture"
                )
                token outputs:surface
            }
        }

        def Material "Green"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Materials/Green/UsdPreviewSurface.outputs:surface>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0, 0.97680455, 0) (
                    colorSpace = "srgb_texture"
                )
                token outputs:surface
            }
        }

        def Material "Blue"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Materials/Blue/UsdPreviewSurface.outputs:surface>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.016804177, 0.198351, 1) (
                    colorSpace = "srgb_texture"
                )
                token outputs:surface
            }
        }

        def Material "Gray"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Materials/Gray/UsdPreviewSurface.outputs:surface>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1) (
                    colorSpace = "srgb_texture"
                )
                token outputs:surface
            }
        }

        def Material "Shiny"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Materials/Shiny/UsdPreviewSurface.outputs:surface>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0.5
                color3f inputs:diffuseColor = (1, 1, 1) (
                    colorSpace = "lin_srgb"
                )
                float inputs:metallic = 0.7
                float inputs:roughness = 0.5
                token outputs:surface
            }
        }

        def Material "GlobeMaterial"
        {
            token inputs:frame:stPrimvarName = "st" (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (126.25, 86.5)
                        float2 sizeInSubgraph = (203.5, 53)
                    }
                }
            )
            token outputs:mtlx:surface.connect = </Root/Materials/GlobeMaterial/PreviewSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Materials/GlobeMaterial/DefaultSurfaceShader.outputs:surface>
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (-137.25, 109.5)
            float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)

            def Shader "DefaultSurfaceShader" (
                active = true
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoat.connect = </Root/Materials/GlobeMaterial/clearcoat.outputs:r>
                float inputs:clearcoatRoughness = 0.75
                color3f inputs:diffuseColor = (1, 1, 1)
                color3f inputs:diffuseColor.connect = </Root/Materials/GlobeMaterial/diffuseColor.outputs:rgb>
                color3f inputs:emissiveColor = (0, 0, 0)
                color3f inputs:emissiveColor.connect = </Root/Materials/GlobeMaterial/emissiveColor.outputs:rgb>
                float inputs:ior = 0.1
                normal3f inputs:normal = (0, 0, 1)
                normal3f inputs:normal.connect = </Root/Materials/GlobeMaterial/normal.outputs:rgb>
                float inputs:roughness = 0.75
                token outputs:surface
            }

            def Shader "diffuseColor"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @ER3D/Assets.xcassets/8081_earthmap10k.imageset/8081_earthmap10k.jpg@
                float2 inputs:st.connect = </Root/Materials/GlobeMaterial/diffuseColor/TexCoordReader.outputs:result>
                color3f outputs:rgb

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname.connect = </Root/Materials/GlobeMaterial/DefaultSurfaceShader.inputs:frame:stPrimvarName>
                    float2 outputs:result
                }
            }

            def Shader "PreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                token outputs:out
                float2 ui:nodegraph:node:pos = (-255, 105)
                float2 ui:nodegraph:node:size = (148.5, 199)
            }

            def Shader "normal"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @ER3D/Assets.xcassets/8081_earthnormal10k.imageset/8081_earthnormal10k.jpg@
                float2 inputs:st.connect = </Root/Materials/GlobeMaterial/normal/TexCoordReader.outputs:result>
                normal3f outputs:rgb

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname.connect = </Root/Materials/GlobeMaterial/DefaultSurfaceShader.inputs:frame:stPrimvarName>
                    float2 outputs:result
                }
            }

            def Shader "emissiveColor"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @ER3D/Assets.xcassets/8081_earthlights10k.imageset/8081_earthlights10k.jpg@
                float2 inputs:st.connect = </Root/Materials/GlobeMaterial/emissiveColor/TexCoordReader.outputs:result>
                color3f outputs:rgb

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname.connect = </Root/Materials/GlobeMaterial/DefaultSurfaceShader.inputs:frame:stPrimvarName>
                    float2 outputs:result
                }
            }

            def Shader "clearcoat"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @ER3D/Assets.xcassets/8081_earthspec10k.imageset/8081_earthspec10k.jpg@
                float2 inputs:st.connect = </Root/Materials/GlobeMaterial/clearcoat/TexCoordReader.outputs:result>
                float outputs:r

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname.connect = </Root/Materials/GlobeMaterial/DefaultSurfaceShader.inputs:frame:stPrimvarName>
                    float2 outputs:result
                }
            }
        }
    }

    def Xform "Long" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, -1.43117)
        }
    )
    {
        reorder nameChildren = ["Lat", "EarthRadius"]
        quatf xformOp:orient = (0.75470954, 0, 0, -0.656059)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Xform "Lat" (
            active = true
            customData = {
                float3 rotationEulerHint = (3.7421843e-9, -0.7330383, 5.97581e-16)
            }
        )
        {
            quatf xformOp:orient = (0.9335804, 1.746815e-9, -0.35836795, 6.7053973e-10)
            float3 xformOp:scale = (0.99999994, 1, 0.99999994)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Xform "EarthRadius" (
                active = true
                customData = {
                    float3 rotationEulerHint = (0, 0, 0)
                }
            )
            {
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
                float3 xformOp:translate = (0.35, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Xform "LocalGeodeticFrame" (
                    active = true
                    prepend apiSchemas = ["MaterialBindingAPI"]
                    customData = {
                        float3 rotationEulerHint = (0, -1.5707963, 0)
                    }
                )
                {
                    reorder nameChildren = ["Camera", "YawFrame", "xArrow", "yArrow", "zArrow"]
                    rel material:binding = </Root/Materials/Gray> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                    quatf xformOp:orient = (0.7071068, 0, -0.7071067, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                    def Xform "xArrow" (
                        active = true
                        customData = {
                            float3 rotationEulerHint = (0, 0, -1.5707964)
                        }
                    )
                    {
                        reorder nameChildren = ["Tail", "Tip"]
                        quatf xformOp:orient = (0.70710677, 0, 0, -0.70710677)
                        float3 xformOp:scale = (1, 1, 1)
                        float3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Cone "Tail" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                            customData = {
                                float3 rotationEulerHint = (0, 0, 3.1415927)
                            }
                        )
                        {
                            uniform token axis = "Y"
                            double height = 0.02
                            rel material:binding = None (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            double radius = 0.001
                            quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (0, 0.01, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                        }

                        def Cone "Tip" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform token axis = "Y"
                            double height = 0.01
                            rel material:binding = None (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            double radius = 0.002
                            quatf xformOp:orient = (1, 0, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (0, 0.025, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                        }
                    }

                    def Xform "yArrow" (
                        active = true
                        customData = {
                            float3 rotationEulerHint = (0, 0, 0)
                        }
                    )
                    {
                        reorder nameChildren = ["Tail", "Tip"]
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
                        float3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Cone "Tail" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                            customData = {
                                float3 rotationEulerHint = (0, 0, 3.1415927)
                            }
                        )
                        {
                            uniform token axis = "Y"
                            double height = 0.02
                            rel material:binding = None (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            double radius = 0.001
                            quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (0, 0.01, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                        }

                        def Cone "Tip" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform token axis = "Y"
                            double height = 0.01
                            rel material:binding = None (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            double radius = 0.002
                            quatf xformOp:orient = (1, 0, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (0, 0.025, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                        }
                    }

                    def Xform "zArrow" (
                        active = true
                        customData = {
                            float3 rotationEulerHint = (1.5707964, 0, 0)
                        }
                    )
                    {
                        reorder nameChildren = ["Tail", "Tip"]
                        quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                        float3 xformOp:scale = (0.9999997, 0.9999997, 0.9999997)
                        float3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Cone "Tail" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                            customData = {
                                float3 rotationEulerHint = (0, 0, 3.1415927)
                            }
                        )
                        {
                            uniform token axis = "Y"
                            double height = 0.02
                            rel material:binding = None (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            double radius = 0.001
                            quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (0, 0.01, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                        }

                        def Cone "Tip" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            uniform token axis = "Y"
                            double height = 0.01
                            rel material:binding = None (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            double radius = 0.002
                            quatf xformOp:orient = (1, 0, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (0, 0.025, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                        }
                    }

                    def Xform "YawFrame" (
                        active = true
                        prepend apiSchemas = ["MaterialBindingAPI"]
                        customData = {
                            float3 rotationEulerHint = (0, 0, 0)
                        }
                    )
                    {
                        reorder nameChildren = ["PitchFrame", "xArrow", "yArrow"]
                        rel material:binding = </Root/Materials/Blue> (
                            bindMaterialAs = "weakerThanDescendants"
                        )
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        float3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Xform "xArrow" (
                            active = true
                            customData = {
                                float3 rotationEulerHint = (0, 0, -1.5707964)
                            }
                        )
                        {
                            reorder nameChildren = ["Tail", "Tip"]
                            quatf xformOp:orient = (0.70710677, 0, 0, -0.70710677)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                            def Cone "Tail" (
                                active = true
                                prepend apiSchemas = ["MaterialBindingAPI"]
                                customData = {
                                    float3 rotationEulerHint = (0, 0, 3.1415927)
                                }
                            )
                            {
                                uniform token axis = "Y"
                                double height = 0.0202
                                rel material:binding = None (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                                double radius = 0.001
                                quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                                float3 xformOp:scale = (1, 1, 1)
                                float3 xformOp:translate = (0, 0.0101, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                            }

                            def Cone "Tip" (
                                active = true
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                uniform token axis = "Y"
                                double height = 0.0098
                                rel material:binding = None (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                                double radius = 0.0019
                                quatf xformOp:orient = (1, 0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                float3 xformOp:translate = (0, 0.0251, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                            }
                        }

                        def Xform "yArrow" (
                            active = true
                            customData = {
                                float3 rotationEulerHint = (0, 0, 0)
                            }
                        )
                        {
                            reorder nameChildren = ["Tail", "Tip"]
                            quatf xformOp:orient = (1, 0, 0, 0)
                            float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
                            float3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                            def Cone "Tail" (
                                active = true
                                prepend apiSchemas = ["MaterialBindingAPI"]
                                customData = {
                                    float3 rotationEulerHint = (0, 0, 3.1415927)
                                }
                            )
                            {
                                uniform token axis = "Y"
                                double height = 0.0202
                                rel material:binding = None (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                                double radius = 0.001
                                quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                                float3 xformOp:scale = (1, 1, 1)
                                float3 xformOp:translate = (0, 0.0101, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                            }

                            def Cone "Tip" (
                                active = true
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                uniform token axis = "Y"
                                double height = 0.0098
                                rel material:binding = None (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                                double radius = 0.0019
                                quatf xformOp:orient = (1, 0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                float3 xformOp:translate = (0, 0.0251, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                            }
                        }

                        def Xform "PitchFrame" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                            customData = {
                                float3 rotationEulerHint = (4.10232e-15, 0, 0)
                            }
                        )
                        {
                            reorder nameChildren = ["RollFrame", "xArrow", "zArrow"]
                            rel material:binding = </Root/Materials/Green> (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            quatf xformOp:orient = (1, 2.05116e-15, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            float3 xformOp:translate = (1.7763568e-15, 0, -2.9802322e-8)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                            def Xform "xArrow" (
                                active = true
                                prepend apiSchemas = ["MaterialBindingAPI"]
                                customData = {
                                    float3 rotationEulerHint = (0, 0, -1.5707964)
                                }
                            )
                            {
                                reorder nameChildren = ["Tail", "Tip"]
                                rel material:binding = None (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                                quatf xformOp:orient = (0.70710677, 0, 0, -0.70710677)
                                float3 xformOp:scale = (1, 1, 1)
                                float3 xformOp:translate = (0, 0, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                def Cone "Tail" (
                                    active = true
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                    customData = {
                                        float3 rotationEulerHint = (0, 0, 3.1415927)
                                    }
                                )
                                {
                                    uniform token axis = "Y"
                                    double height = 0.0204
                                    rel material:binding = None (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    double radius = 0.001
                                    quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                                    float3 xformOp:scale = (1, 1, 1)
                                    float3 xformOp:translate = (0, 0.0102, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                }

                                def Cone "Tip" (
                                    active = true
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    uniform token axis = "Y"
                                    double height = 0.0096
                                    rel material:binding = None (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    double radius = 0.0018
                                    quatf xformOp:orient = (1, 0, 0, 0)
                                    float3 xformOp:scale = (1, 1, 1)
                                    float3 xformOp:translate = (0, 0.0252, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                }
                            }

                            def Xform "zArrow" (
                                active = true
                                prepend apiSchemas = ["MaterialBindingAPI"]
                                customData = {
                                    float3 rotationEulerHint = (1.5707964, 0, 0)
                                }
                            )
                            {
                                reorder nameChildren = ["Tail", "Tip"]
                                rel material:binding = None (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                                quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                                float3 xformOp:scale = (0.9999997, 0.9999997, 0.9999997)
                                float3 xformOp:translate = (0, 0, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                def Cone "Tail" (
                                    active = true
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                    customData = {
                                        float3 rotationEulerHint = (0, 0, 3.1415927)
                                    }
                                )
                                {
                                    uniform token axis = "Y"
                                    double height = 0.0204
                                    rel material:binding = None (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    double radius = 0.001
                                    quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                                    float3 xformOp:scale = (1, 1, 1)
                                    float3 xformOp:translate = (0, 0.0102, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                }

                                def Cone "Tip" (
                                    active = true
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    uniform token axis = "Y"
                                    double height = 0.0096
                                    rel material:binding = None (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    double radius = 0.0018
                                    quatf xformOp:orient = (1, 0, 0, 0)
                                    float3 xformOp:scale = (1, 1, 1)
                                    float3 xformOp:translate = (0, 0.0252, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                }
                            }

                            def Xform "RollFrame" (
                                active = true
                                prepend apiSchemas = ["MaterialBindingAPI"]
                                customData = {
                                    float3 rotationEulerHint = (0, 1.776357e-15, 8.498326e-8)
                                }
                            )
                            {
                                reorder nameChildren = ["xArrow", "yArrow", "zArrow", "Ship"]
                                rel material:binding = </Root/Materials/Red> (
                                    bindMaterialAs = "weakerThanDescendants"
                                )
                                quatf xformOp:orient = (1, -3.7740153e-23, 8.881785e-16, 4.249163e-8)
                                float3 xformOp:scale = (1, 1, 1)
                                float3 xformOp:translate = (0, -2.141607e-9, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                def Xform "yArrow" (
                                    active = true
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                    customData = {
                                        float3 rotationEulerHint = (0, 0, 0)
                                    }
                                )
                                {
                                    reorder nameChildren = ["Tail", "Tip"]
                                    rel material:binding = None (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    quatf xformOp:orient = (1, 0, 0, 0)
                                    float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
                                    float3 xformOp:translate = (0, 0, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                    def Cone "Tip" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.0094
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.0017000000000000001
                                        quatf xformOp:orient = (1, 0, 0, 0)
                                        float3 xformOp:scale = (1, 1, 1)
                                        float3 xformOp:translate = (0, 0.0253, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }

                                    def Cone "Tail" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (0, 0, 3.1415927)
                                        }
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.0206
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.001
                                        quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                                        float3 xformOp:scale = (1, 1, 1)
                                        float3 xformOp:translate = (0, 0.0103, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }
                                }

                                def Xform "zArrow" (
                                    active = true
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                    customData = {
                                        float3 rotationEulerHint = (1.5707964, 0, 0)
                                    }
                                )
                                {
                                    reorder nameChildren = ["Tail", "Tip"]
                                    rel material:binding = None (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                                    float3 xformOp:scale = (0.9999997, 0.9999997, 0.9999997)
                                    float3 xformOp:translate = (0, 0, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                    def Cone "Tail" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (0, 0, 3.1415927)
                                        }
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.0206
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.001
                                        quatf xformOp:orient = (-4.371139e-8, 0, 0, 1)
                                        float3 xformOp:scale = (1, 1, 1)
                                        float3 xformOp:translate = (0, 0.0103, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }

                                    def Cone "Tip" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.0094
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.0017000000000000001
                                        quatf xformOp:orient = (1, 0, 0, 0)
                                        float3 xformOp:scale = (1, 1, 1)
                                        float3 xformOp:translate = (0, 0.0253, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }
                                }

                                def Xform "Ship" (
                                    active = true
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                    customData = {
                                        float3 rotationEulerHint = (0, -3.7252907e-9, 0)
                                    }
                                )
                                {
                                    reorder nameChildren = ["Body", "RightWing", "LeftWing", "RightRearWing", "LeftRearWing", "Stabilizer"]
                                    rel material:binding = </Root/Materials/Shiny> (
                                        bindMaterialAs = "weakerThanDescendants"
                                    )
                                    quatf xformOp:orient = (1, 0, -1.8626454e-9, 0)
                                    float3 xformOp:scale = (1, 1, 1)
                                    float3 xformOp:translate = (-2.9802322e-8, 0, 0)
                                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                                    def Capsule "RightWing" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (-0.17453296, 1.8626451e-9, 0.34906587)
                                        }
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.0125
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.002
                                        quatf xformOp:orient = (0.98106027, -0.085831665, -0.01513444, 0.17298742)
                                        float3 xformOp:scale = (1, 1, 0.2)
                                        float3 xformOp:translate = (-0.001, 0.0075, -0.001)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }

                                    def Capsule "LeftWing" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (0.17453296, 1.8626451e-9, -0.34906584)
                                        }
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.0125
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.002
                                        quatf xformOp:orient = (0.98106027, 0.085831665, -0.015134437, -0.17298739)
                                        float3 xformOp:scale = (1.0000001, 1.0000001, 0.20000002)
                                        float3 xformOp:translate = (-0.0009999871, -0.0075, -0.001)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }

                                    def Capsule "Body" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (0, 0, -1.5707964)
                                        }
                                    )
                                    {
                                        reorder nameChildren = ["RightWing", "RightRearWing", "LeftRearWing", "DefaultMaterial", "Stabilizer", "LeftWing"]
                                        uniform token axis = "Y"
                                        double height = 0.02
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.003
                                        quatf xformOp:orient = (0.70710677, 0, 0, -0.70710677)
                                        float3 xformOp:scale = (0.8, 1, 1)
                                        float3 xformOp:translate = (0, 0, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }

                                    def Capsule "RightRearWing" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (-0.17453292, 0, 0.5235988)
                                        }
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.004
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.0015
                                        quatf xformOp:orient = (0.9622502, -0.08418598, -0.022557566, 0.25783417)
                                        float3 xformOp:scale = (0.99999994, 1, 0.25)
                                        float3 xformOp:translate = (-0.0105, 0.003, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }

                                    def Capsule "LeftRearWing" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (0.17453294, -4.0978197e-8, -0.5235988)
                                        }
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.004
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.0015
                                        quatf xformOp:orient = (0.9622502, 0.08418598, -0.022557588, -0.25783417)
                                        float3 xformOp:scale = (0.99999976, 0.9999999, 0.25)
                                        float3 xformOp:translate = (-0.010500013, -0.003, 0)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }

                                    def Capsule "Stabilizer" (
                                        active = true
                                        prepend apiSchemas = ["MaterialBindingAPI"]
                                        customData = {
                                            float3 rotationEulerHint = (1.5707965, 0.5235988, -3.4412757e-8)
                                        }
                                    )
                                    {
                                        uniform token axis = "Y"
                                        double height = 0.006
                                        rel material:binding = None (
                                            bindMaterialAs = "weakerThanDescendants"
                                        )
                                        double radius = 0.0015
                                        quatf xformOp:orient = (0.68301266, 0.6830127, 0.18301268, -0.18301271)
                                        float3 xformOp:scale = (0.9999997, 0.9999998, 0.25)
                                        float3 xformOp:translate = (-0.010500039, 0, -0.003)
                                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                                    }
                                }
                            }
                        }
                    }

                    def Xform "Camera" (
                        active = true
                        customData = {
                            float3 rotationEulerHint = (0, 0, 0)
                        }
                    )
                    {
                        quatf xformOp:orient = (1, 0, 0, 0)
                        float3 xformOp:scale = (1, 1.0000002, 1.0000002)
                        float3 xformOp:translate = (-0.03, -0.01, -0.02)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                        def Sphere "Sphere" (
                            active = true
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            rel material:binding = </Root/Materials/Gray> (
                                bindMaterialAs = "weakerThanDescendants"
                            )
                            double radius = 0.001
                            quatf xformOp:orient = (1, 1.477035e-8, 3.5795213e-9, 4.6760583e-8)
                            float3 xformOp:scale = (1.0000001, 1, 1)
                            float3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                        }
                    }
                }
            }
        }
    }

    def RealityKitComponent "Anchoring"
    {
        uniform token info:id = "RealityKit.Anchoring"

        def RealityKitStruct "descriptor"
        {
            matrix4d transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            token type = "Plane"
        }
    }
}

def Sphere "GlobalX" (
    active = true
    prepend apiSchemas = ["MaterialBindingAPI"]
    customData = {
        float3 rotationEulerHint = (0, 8.742276e-8, 0)
    }
)
{
    rel material:binding = </Root/Materials/Red> (
        bindMaterialAs = "weakerThanDescendants"
    )
    double radius = 0.1
    quatf xformOp:orient = (1, 0, 4.371138e-8, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0.32, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
}

def Sphere "GlobalY" (
    active = true
    prepend apiSchemas = ["MaterialBindingAPI"]
    customData = {
        float3 rotationEulerHint = (0, 8.742276e-8, 0)
    }
)
{
    rel material:binding = </Root/Materials/Green> (
        bindMaterialAs = "weakerThanDescendants"
    )
    double radius = 0.1
    quatf xformOp:orient = (1, 0, 4.371138e-8, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0, 0.32, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
}

def Sphere "GlobalZ" (
    active = true
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    rel material:binding = </Root/Materials/Blue> (
        bindMaterialAs = "weakerThanDescendants"
    )
    double radius = 0.1
    quatf xformOp:orient = (1, 0, 0, 0)
    float3 xformOp:scale = (1, 1, 1)
    float3 xformOp:translate = (0, 0, 0.32)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
}

